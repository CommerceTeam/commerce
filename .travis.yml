language: php

php:
  - 5.3
  - 5.4
  - 5.5
  - 5.6
  - 7

env:
  - TYPO3_VERSION=^6.2.0
  - TYPO3_VERSION=^7.6.0
  - TYPO3_VERSION=dev-master

matrix:
  exclude:
    - php: 5.3
      env: TYPO3_VERSION=^7.6.0
    - php: 5.4
      env: TYPO3_VERSION=^7.6.0
    - php: 5.3
      env: TYPO3_VERSION=dev-master
    - php: 5.4
      env: TYPO3_VERSION=dev-master
    - php: 5.5
      env: TYPO3_VERSION=dev-master
    - php: 5.6
      env: TYPO3_VERSION=dev-master
    - php: 7
      env: TYPO3_VERSION=^6.2.0

sudo: false
cache:
  directories:
    - $HOME/.composer/cache

addons:
  apt:
    packages:
      - parallel

notifications:
  email:
    - typo3@evoweb.de

before_install:
  - phpenv config-rm xdebug.ini
  - composer self-update
  - composer --version
  - if [ "$GITHUB_COMPOSER_AUTH" ]; then composer config -g github-oauth.github.com $GITHUB_COMPOSER_AUTH; fi

before_script:
  - if [ "$TYPO3_VERSION" == "^6.2.0" ]; then composer require typo3/cms-composer-installers="1.2.5 as 1.1.4" --no-update; fi
  - composer require typo3/cms="$TYPO3_VERSION"
  # We currently need to get rid of the typo3/cms requirement in composer.json
  - git checkout composer.json
  - export TYPO3_PATH_WEB=$PWD/.Build/Web

script:
  - >
    echo;
    echo "Running php lint";
    find . -name \*.php ! -path "./.Build/*" | parallel --gnu php -d display_errors=stderr -l {} > /dev/null \;

  #- >
  #  echo;
  #  echo "Running unit tests";
  #  .Build/bin/phpunit -c .Build/vendor/typo3/cms/typo3/sysext/core/Build/UnitTests.xml Tests/Unit/

  #- >
  #  echo;
  #  export typo3DatabaseName="typo3";
  #  export typo3DatabaseHost="localhost";
  #  export typo3DatabaseUsername="root";
  #  export typo3DatabasePassword="";
  #  find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo "Running functional test suite {}"; .Build/bin/phpunit --colors  -c .Build/vendor/typo3/cms/typo3/sysext/core/Build/FunctionalTests.xml {}'

after_script:
  - >
    if [ -n "$TRAVIS_TAG" ] && [ -n "$TYPO3_ORG_USERNAME" ] && [ -n "$TYPO3_ORG_PASSWORD" ]; then
      echo -e "Preparing upload of release ${TRAVIS_TAG} to TER\n"
      curl -sSL https://raw.githubusercontent.com/alrra/travis-after-all/1.4.4/lib/travis-after-all.js | node
      if [ $? -eq 0 ]; then
        cd ../../
        TAG_MESSAGE=`git tag -n10 -l $TRAVIS_TAG | sed 's/^[0-9.]*[ ]*//g'`
        echo "Uploading release ${TRAVIS_TAG} to TER"
        .Build/bin/upload . "$TYPO3_ORG_USERNAME" "$TYPO3_ORG_PASSWORD" "$TAG_MESSAGE"
      fi;
    fi;